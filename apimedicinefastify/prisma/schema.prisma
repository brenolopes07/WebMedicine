// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default (uuid())
  email String @unique
  password String
  role String // PACIENTE, MEDICO
  pacinete Paciente?
  medico Medico?
}

model Paciente{
  id String @id @default (uuid())
  name String
  phone String?
  adress String?
  userId String @unique
  User User @relation(fields: [userId], references: [id])
  planoId String?
  Plano PlanodeSaude? @relation(fields: [planoId], references: [id])
  consulta Consulta[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Medico {
  id String @id @default (uuid())
  name String
  phone String
  crm String @unique
  especialidade String
  price String?
  userId String @unique
  Planos PlanodeSaude[]
  User User @relation(fields: [userId], references: [id])
  horarioInicio String // 08:00	
  horarioFim String // 18:00
  diasAtendimento String[] // ["segunda", "ter√ßa", "quarta", "quinta", "sexta"]
  consultas Consulta[]
  createdAt DateTime @default(now())    
  updatedAt DateTime @updatedAt
}

model Consulta {
  id String @id @default(uuid())
  pacienteId String
  MedicoId String
  dataConsulta DateTime
  status String @default ("AGENDADA")
  paciente Paciente @relation(fields: [pacienteId], references: [id])
  medico Medico @relation(fields: [MedicoId], references: [id])
  createdAt DateTime @default(now())
}

model PlanodeSaude{
  id String @id @default (uuid())
  name String @unique
  pacientes Paciente[]
  medicos Medico[]
  createdAt DateTime @default(now())
}